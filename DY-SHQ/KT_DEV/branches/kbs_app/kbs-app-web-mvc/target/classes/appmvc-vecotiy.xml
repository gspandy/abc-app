<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- 自动扫描且只扫描@Controller -->
	<context:component-scan base-package="com.kingteller.bs.mvc"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
		<context:include-filter type="annotation"
			expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>

	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- spring mvc 添加json处理 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
		
	<!--  
    	启动Spring MVC的注解功能，完成请求和注解POJO的映射，添加拦截器，类级别的处理器映射  
    -->  
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">  
        <property name="interceptors">  
            <list>  
                <bean class="com.kingteller.bs.mvc.util.MyHandlerInterceptor"/>  
            </list>  
        </property>  
    </bean>  
		
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters"><!-- 配置一下对json数据的转换 -->
			<util:list id="beanList">
				<ref bean="mappingJacksonHttpMessageConverter" />
			</util:list>
		</property>
		
		<property name="cacheSeconds" value="0" />  
        <property name="webBindingInitializer">  
            <bean class="com.kingteller.bs.mvc.util.MyWebBinding" />  
        </property>  
       
		
	</bean>
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">

	</bean>

	<!-- 自定义HandlerMethodExceptionResolver--> 
	<bean id="handlerExceptionResolver"
		class="com.kingteller.bs.mvc.exceptionhandler.AnnotationHandlerMethodExceptionResolver">
		<property name="defaultErrorView" value="/error/500.html" />
		<property name="messageConverters" ref="mappingJacksonHttpMessageConverter" />
	</bean>
	
	<!-- velocity配置 
	<bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer" >
	  <property name="configLocation" value="classpath:velocity.properties" />
      <property name="resourceLoaderPath" value="/WEB-INF/template/" />
    </bean> 
    -->
	<!--  对模型视图名称的解析，即在模型视图名称添加前后缀  
    InternalResourceViewResolver默认的就是JstlView
    -->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/view/"></property>  
        <property name="suffix" value=".jsp"></property>  
    </bean> 
    
     <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="exposeSpringMacroHelpers" value="true" />
        <property name="exposeRequestAttributes" value="true" />
        <property name="requestContextAttribute" value="request" />
        <property name="numberToolAttribute" value="number" />
    	<property name="dateToolAttribute" value="date" />
        <property name="toolboxConfigLocation" value="/WEB-INF/velocityToolBox.xml" />
    </bean>
    <bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!-- 设置为true以忽略对Accept Header的支持 -->
		<property name="ignoreAcceptHeader" value="true" />
		<property name="defaultContentType" value="text/html; charset=UTF-8" />
		<property name="mediaTypes">
			<map>
				<entry key="html" value="text/html; charset=UTF-8" />
				<entry key="json" value="application/json; charset=UTF-8" />
			</map>
		</property>
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
				<ref bean="viewResolver" />
			</list>
		</property>
	</bean>

	<!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL -->
	<mvc:default-servlet-handler />

	<!-- 定义无需Controller的url<->view直接映射 ** -->
	<mvc:view-controller path="/" view-name="redirect:/index.jsp" />

	<!-- 将Controller抛出的异常转到特定View, 保持SiteMesh的装饰效果 -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="com.kingteller.bs.framework.exception.BusinessException">/error/500.html</prop>
			</props>
		</property>
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages" />
	</bean>

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<props>
				<prop key="resource.loader">class</prop>
				<prop key="class.resource.loader.class">
					org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
				</prop>
				<prop key="velocimacro.library"></prop>
			</props>
		</property>
	</bean>
	
	<!-- 启用shrio授权注解拦截方式  -->
	<!--
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	    <property name="securityManager" ref="securityManager" />
	</bean>
	 -->
	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理-->
	<mvc:resources mapping="/static/img/**" location="/static/img/"/>
	<mvc:resources mapping="/static/js/**" location="/static/js/"/>
	<mvc:resources mapping="/static/css/**" location="/static/css/"/>
	<mvc:resources mapping="/static/html/**" location="/static/html/"/>
	 
	 
</beans>